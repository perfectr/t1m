buildscript {
    ext {
        springBootVersion = '1.2.1.RELEASE'
    }
    repositories {
		jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.ewerk.gradle.plugins:querydsl-plugin:1.0.1")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

jar {
    baseName = 'AngularSpring'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	jcenter()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    // Using the JTDS driver for SQL Server. If you want to use the Microsoft driver you'll need to host and
    // maintain your own Nexus or Artifactory service
    compile 'net.sourceforge.jtds:jtds:1.3.1'

    compile "com.mysema.querydsl:querydsl-jpa:3.6.0"
    compile "com.mysema.querydsl:querydsl-sql:3.6.0"

    compile 'joda-time:joda-time:2.6'
    compile 'commons-io:commons-io:2.4'


    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

querydsl {
    jpa = true
}
